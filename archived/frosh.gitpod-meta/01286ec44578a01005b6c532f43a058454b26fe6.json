{
    "manifests": {
        "frosh/gitpod-meta": {
            "manifest": {
                "copy-from-recipe": {
                    "root/": ""
                },
                "post-install-output": [
                    "  * <fg=blue>Run</> your application on Gitpod:",
                    "    1. Commit the <comment>.gitpod.yml</comment> and <comment>.gitpod.Dockerfile</comment>",
                    "    2. Open your repository inside Gitpod",
                    "    3. To improve the performance of start-up, register the repository at Gitpod and enable prebuilt",
                    "",
                    "  * <fg=blue>Read</> the documentation at <comment>https://www.gitpod.io/docs/introduction/getting-started</>"
                ]
            },
            "files": {
                "root/.gitpod.Dockerfile": {
                    "contents": [
                        "FROM gitpod/workspace-base:latest",
                        "",
                        "COPY --from=composer:2 /usr/bin/composer /usr/bin/composer",
                        "",
                        "RUN sudo add-apt-repository ppa:ondrej/php -y && \\",
                        "    curl -fsSL https://deb.nodesource.com/setup_16.x | sudo bash - && \\",
                        "    curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.deb.sh' | sudo -E bash && \\",
                        "    curl -1sLf 'https://dl.cloudsmith.io/public/friendsofshopware/stable/setup.deb.sh'  | sudo -E bash && \\",
                        "    sudo apt-get install -y \\",
                        "    php8.1-fpm php8.1-mysql php8.1-curl php8.1-gd php8.1-xml php8.1-zip php8.1-opcache php8.1-mbstring php8.1-intl php8.1-cli php8.1-redis \\",
                        "    rsync \\",
                        "    symfony-cli \\",
                        "    shopware-cli \\",
                        "    mysql-client-8.0 \\",
                        "    nodejs && \\",
                        "    sudo apt-get upgrade -y && \\",
                        "    echo \"memory_limit=512M\" > php.ini && \\",
                        "    echo \"zend.assertions=-1\" >> php.ini && \\",
                        "    echo \"opcache.interned_strings_buffer=20\" >> php.ini && \\",
                        "    echo \"zend.detect_unicode=0\" >> php.ini && \\",
                        "    echo \"realpath_cache_ttl=3600\" >> php.ini && \\",
                        "    sudo cp php.ini /etc/php/8.1/cli/conf.d/99-overrides.ini && \\",
                        "    sudo cp php.ini /etc/php/8.1/fpm/conf.d/99-overrides.ini && \\",
                        "    rm php.ini && \\",
                        "    echo \"[client]\" > ~/.my.cnf && \\",
                        "    echo \"host=127.0.0.1\" >> ~/.my.cnf && \\",
                        "    echo \"user=root\" >> ~/.my.cnf && \\",
                        "    echo \"password=root\" >> ~/.my.cnf"
                    ],
                    "executable": false
                },
                "root/.gitpod.yml": {
                    "contents": [
                        "image:\r",
                        "    file: .gitpod.Dockerfile\r",
                        "tasks:\r",
                        "    - name: Shopware\r",
                        "      before: |\r",
                        "        echo 'alias admin-watch=\"LOAD_DOTENV=0 APP_URL=http://localhost:8000 ./bin/watch-administration.sh\"' >> ~/.bashrc\r",
                        "      init: |\r",
                        "        # Run MySQL\r",
                        "        docker run --restart always -d --name=mysql -v /workspace/mysql:/var/lib/mysql -p 127.0.0.1:3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql:8\r",
                        "        docker run --restart always -d --name=adminer --link mysql:mysql -p 5000:8080 -e ADMINER_DESIGN=pepa-linha -e ADMINER_DEFAULT_SERVER=mysql -e ADMINER_PLUGINS=\"tables-filter table-structure json-column version-noverify\" ghcr.io/shyim/shopware-docker/adminer\r",
                        "\r",
                        "        composer config --global github-oauth.github.com $(printf '%s\\n' host=github.com | gp credential-helper get | sort | head -2 | tail -1 | sed 's;password=;;')\r",
                        "        composer install\r",
                        "\r",
                        "        composer req --dev profiler fakerphp/faker mbezhanov/faker-provider-collection maltyxx/images-generator\r",
                        "\r",
                        "        # Configure Shopware\r",
                        "        sed -i -e 's;DATABASE_URL=.*$;DATABASE_URL=mysql://root:root@127.0.0.1:3306/shopware;' .env\r",
                        "        sed -i -e \"s;APP_URL=.*$;APP_URL=$(gp url 8000);\" .env\r",
                        "        echo \"TRUSTED_PROXIES=192.168.0.0/16\" >> .env\r",
                        "\r",
                        "        ./bin/console system:install --basic-setup --create-database --drop-database\r",
                        "\r",
                        "        ./bin/console system:config:set core.frw.completedAt '2019-10-07T10:46:23+00:00'\r",
                        "\r",
                        "        ./bin/console framework:demodata --products 300\r",
                        "        ./bin/console dal:refresh:index\r",
                        "\r",
                        "        rm -rf var/cache/*\r",
                        "\r",
                        "        # Set by default to dev\r",
                        "        sed -i -e \"s;APP_ENV=.*$;APP_ENV=dev;\" .env\r",
                        "      command: |\r",
                        "        # Gitpod registers the ports on first docker command\r",
                        "        docker ps\r",
                        "\r",
                        "        # Wait for port open\r",
                        "        gp ports await 3306\r",
                        "\r",
                        "        # Wait until MySQL is reachable\r",
                        "        until mysqladmin ping; do\r",
                        "            sleep 1\r",
                        "        done\r",
                        "\r",
                        "        # Update domain url\r",
                        "        ./bin/console sales-channel:update:domain $(gp url 8000 | awk -F[/:] '{print $4}')\r",
                        "\r",
                        "        # Start Webserver\r",
                        "        symfony server:start --port 8000 -d\r",
                        "    - name: Getting Started\r",
                        "      command: |\r",
                        "        echo 'Hey!. Your environment is starting soon. You can see the progress in the Shopware Terminal'\r",
                        "        echo 'If you want to run the Admin Watch, just use the Terminal alias: admin-watch'\r",
                        "        echo 'Happy Coding!'\r",
                        "        echo \"Shop URL: $(gp url 8000)\"\r",
                        "        echo \"Admin-Watcher URL: $(gp url 8080)\"\r",
                        "        echo \"Adminer URL: $(gp url 5000)\"\r",
                        "ports:\r",
                        "    - port: 8000\r",
                        "      visibility: private\r",
                        "      description: Shopware\r",
                        "      onOpen: open-browser\r",
                        "    - port: 5000\r",
                        "      visibility: private\r",
                        "      description: Adminer\r",
                        "      onOpen: notify\r",
                        "    - name: Admin-Watcher\r",
                        "      port: 8080\r",
                        "      onOpen: notify\r",
                        "      description: \"Use Forward Proxy to localhost to access this service\"\r",
                        "jetbrains:\r",
                        "    phpstorm:\r",
                        "        plugins:\r",
                        "            - de.espend.idea.php.annotation\r",
                        "            - fr.adrienbrault.idea.symfony2plugin\r",
                        "            - de.shyim.shopware6\r",
                        "            - de.shyim.ideaphpstantoolbox\r",
                        "        vmoptions: \"-Xmx4g\"\r",
                        "        prebuilds:\r",
                        "            version: stable\r",
                        "vscode:\r",
                        "    extensions:\r",
                        "        - bmewburn.vscode-intelephense-client\r",
                        "        - redhat.vscode-yaml\r",
                        "github:\r",
                        "    prebuilds:\r",
                        "        master: true\r",
                        "        branches: true\r",
                        "        pullRequests: true\r",
                        "        pullRequestsFromForks: true\r",
                        "        addCheck: false\r",
                        "        addComment: false\r",
                        "        addBadge: true\r",
                        ""
                    ],
                    "executable": false
                }
            },
            "ref": "01286ec44578a01005b6c532f43a058454b26fe6"
        }
    }
}
